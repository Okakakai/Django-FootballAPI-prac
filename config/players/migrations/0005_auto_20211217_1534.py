# Generated by Django 3.2 on 2021-12-17 06:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('players', '0004_auto_20211217_1532'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dribble',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offensiveawarenessvalue', models.PositiveIntegerField()),
                ('tightpossessionvalue', models.PositiveIntegerField()),
                ('physicalcontactvalue', models.PositiveIntegerField()),
                ('ballcontrolvalue', models.PositiveIntegerField()),
                ('dribblingvalue', models.PositiveIntegerField()),
                ('speedvalue', models.PositiveIntegerField()),
                ('accelerationvalue', models.PositiveIntegerField()),
                ('staminavalue', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finishingvalue', models.PositiveIntegerField()),
                ('balancevalue', models.PositiveIntegerField()),
                ('headingvalue', models.PositiveIntegerField()),
                ('jumpvalue', models.PositiveIntegerField()),
                ('curlvalue', models.PositiveIntegerField()),
                ('kickingpowervalue', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Total',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('totalvalue', models.PositiveIntegerField()),
            ],
        ),
        migrations.DeleteModel(
            name='Dribbling',
        ),
        migrations.DeleteModel(
            name='Scoring',
        ),
        migrations.DeleteModel(
            name='Totalvalue',
        ),
        migrations.AddField(
            model_name='condition',
            name='conditionvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='defensive',
            name='aggressionvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='defensive',
            name='ballwinningvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='defensive',
            name='defensiveawarenessvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='gksense',
            name='gk_awarenessvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='gksense',
            name='gk_catchingvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='gksense',
            name='gk_clearingvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='gksense',
            name='gk_reachvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='gksense',
            name='gk_reflexesvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='inverseleg',
            name='weakfootaccuracyvalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='inverseleg',
            name='weakfootusagevalue',
            field=models.PositiveIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='condition',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='players.condition', verbose_name='va\\lue of condition'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='defensive',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='players.defensive'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='gkSense',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='players.gksense'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='inverseLeg',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='players.inverseleg'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='dribbling',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='players.dribble'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='scoring',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='players.score'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='player',
            name='total',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='players.total', verbose_name='value of tota'),
            preserve_default=False,
        ),
    ]
